;; Analyzed by ClojureScript 1.7.170
{:use-macros nil, :excludes #{}, :name app.colors, :imports nil, :requires {color goog.color, goog.color goog.color, db app.db, app.db app.db}, :uses nil, :defs {random-hue {:protocol-inline nil, :meta {:file "/home/severin/.boot/cache/tmp/home/severin/go/src/github.com/mswift42/atc2/app/enc/-grrwi1/app/colors.cljs", :line 182, :column 7, :end-line 182, :end-column 17, :arglists (quote ([])), :doc "return a random int between 0 and 360 "}, :name app.colors/random-hue, :variadic false, :file "/home/severin/.boot/cache/tmp/home/severin/go/src/github.com/mswift42/atc2/app/enc/-grrwi1/app/colors.cljs", :end-column 17, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 182, :end-line 182, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :doc "return a random int between 0 and 360 "}, hexToLch {:protocol-inline nil, :meta {:file "/home/severin/.boot/cache/tmp/home/severin/go/src/github.com/mswift42/atc2/app/enc/-grrwi1/app/colors.cljs", :line 101, :column 7, :end-line 101, :end-column 15, :arglists (quote ([hexcolor]))}, :name app.colors/hexToLch, :variadic false, :file "/home/severin/.boot/cache/tmp/home/severin/go/src/github.com/mswift42/atc2/app/enc/-grrwi1/app/colors.cljs", :end-column 15, :method-params ([hexcolor]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 101, :end-line 101, :max-fixed-arity 1, :fn-var true, :arglists (quote ([hexcolor]))}, derive-colors-from-theme {:protocol-inline nil, :meta {:file "/home/severin/.boot/cache/tmp/home/severin/go/src/github.com/mswift42/atc2/app/enc/-grrwi1/app/colors.cljs", :line 245, :column 7, :end-line 245, :end-column 31, :arglists (quote ([theme])), :doc "return a theme map with additional lighter/darker \n   variants of the background and foreground colors."}, :name app.colors/derive-colors-from-theme, :variadic false, :file "/home/severin/.boot/cache/tmp/home/severin/go/src/github.com/mswift42/atc2/app/enc/-grrwi1/app/colors.cljs", :end-column 31, :method-params ([theme]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 245, :end-line 245, :max-fixed-arity 1, :fn-var true, :arglists (quote ([theme])), :doc "return a theme map with additional lighter/darker \n   variants of the background and foreground colors."}, color-list {:protocol-inline nil, :meta {:file "/home/severin/.boot/cache/tmp/home/severin/go/src/github.com/mswift42/atc2/app/enc/-grrwi1/app/colors.cljs", :line 195, :column 7, :end-line 195, :end-column 17, :arglists (quote ([lightness saturation]))}, :name app.colors/color-list, :variadic false, :file "/home/severin/.boot/cache/tmp/home/severin/go/src/github.com/mswift42/atc2/app/enc/-grrwi1/app/colors.cljs", :end-column 17, :method-params ([lightness saturation]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 195, :end-line 195, :max-fixed-arity 2, :fn-var true, :arglists (quote ([lightness saturation]))}, xyzToLab {:protocol-inline nil, :meta {:file "/home/severin/.boot/cache/tmp/home/severin/go/src/github.com/mswift42/atc2/app/enc/-grrwi1/app/colors.cljs", :line 42, :column 7, :end-line 42, :end-column 15, :arglists (quote ([xyzcolor]))}, :name app.colors/xyzToLab, :variadic false, :file "/home/severin/.boot/cache/tmp/home/severin/go/src/github.com/mswift42/atc2/app/enc/-grrwi1/app/colors.cljs", :end-column 15, :method-params ([xyzcolor]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 42, :end-line 42, :max-fixed-arity 1, :fn-var true, :arglists (quote ([xyzcolor]))}, soft-palette {:protocol-inline nil, :meta {:file "/home/severin/.boot/cache/tmp/home/severin/go/src/github.com/mswift42/atc2/app/enc/-grrwi1/app/colors.cljs", :line 201, :column 7, :end-line 201, :end-column 19, :arglists (quote ([])), :doc "soft-palette returns a vector of 7 random soft colors."}, :name app.colors/soft-palette, :variadic false, :file "/home/severin/.boot/cache/tmp/home/severin/go/src/github.com/mswift42/atc2/app/enc/-grrwi1/app/colors.cljs", :end-column 19, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 201, :end-line 201, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :doc "soft-palette returns a vector of 7 random soft colors."}, within-limit? {:protocol-inline nil, :meta {:file "/home/severin/.boot/cache/tmp/home/severin/go/src/github.com/mswift42/atc2/app/enc/-grrwi1/app/colors.cljs", :line 269, :column 7, :end-line 269, :end-column 20, :arglists (quote ([limit resultlist targetlist]))}, :name app.colors/within-limit?, :variadic false, :file "/home/severin/.boot/cache/tmp/home/severin/go/src/github.com/mswift42/atc2/app/enc/-grrwi1/app/colors.cljs", :end-column 20, :method-params ([limit resultlist targetlist]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 269, :end-line 269, :max-fixed-arity 3, :fn-var true, :arglists (quote ([limit resultlist targetlist]))}, clamp {:protocol-inline nil, :meta {:file "/home/severin/.boot/cache/tmp/home/severin/go/src/github.com/mswift42/atc2/app/enc/-grrwi1/app/colors.cljs", :line 15, :column 7, :end-line 15, :end-column 12, :arglists (quote ([val]))}, :name app.colors/clamp, :variadic false, :file "/home/severin/.boot/cache/tmp/home/severin/go/src/github.com/mswift42/atc2/app/enc/-grrwi1/app/colors.cljs", :end-column 12, :method-params ([val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 15, :end-line 15, :max-fixed-arity 1, :fn-var true, :arglists (quote ([val]))}, xyzreferencewhited65 {:name app.colors/xyzreferencewhited65, :file "/home/severin/.boot/cache/tmp/home/severin/go/src/github.com/mswift42/atc2/app/enc/-grrwi1/app/colors.cljs", :line 40, :column 1, :end-line 40, :end-column 26, :meta {:file "/home/severin/.boot/cache/tmp/home/severin/go/src/github.com/mswift42/atc2/app/enc/-grrwi1/app/colors.cljs", :line 40, :column 6, :end-line 40, :end-column 26}}, radToDegrees {:protocol-inline nil, :meta {:file "/home/severin/.boot/cache/tmp/home/severin/go/src/github.com/mswift42/atc2/app/enc/-grrwi1/app/colors.cljs", :line 52, :column 7, :end-line 52, :end-column 19, :arglists (quote ([h]))}, :name app.colors/radToDegrees, :variadic false, :file "/home/severin/.boot/cache/tmp/home/severin/go/src/github.com/mswift42/atc2/app/enc/-grrwi1/app/colors.cljs", :end-column 19, :method-params ([h]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 52, :end-line 52, :max-fixed-arity 1, :fn-var true, :arglists (quote ([h]))}, inc-contrast {:protocol-inline nil, :meta {:file "/home/severin/.boot/cache/tmp/home/severin/go/src/github.com/mswift42/atc2/app/enc/-grrwi1/app/colors.cljs", :line 148, :column 7, :end-line 148, :end-column 19, :arglists (quote ([]))}, :name app.colors/inc-contrast, :variadic false, :file "/home/severin/.boot/cache/tmp/home/severin/go/src/github.com/mswift42/atc2/app/enc/-grrwi1/app/colors.cljs", :end-column 19, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 148, :end-line 148, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, lchToRgb {:protocol-inline nil, :meta {:file "/home/severin/.boot/cache/tmp/home/severin/go/src/github.com/mswift42/atc2/app/enc/-grrwi1/app/colors.cljs", :line 105, :column 7, :end-line 105, :end-column 15, :arglists (quote ([lchcolor]))}, :name app.colors/lchToRgb, :variadic false, :file "/home/severin/.boot/cache/tmp/home/severin/go/src/github.com/mswift42/atc2/app/enc/-grrwi1/app/colors.cljs", :end-column 15, :method-params ([lchcolor]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 105, :end-line 105, :max-fixed-arity 1, :fn-var true, :arglists (quote ([lchcolor]))}, lchToLab {:protocol-inline nil, :meta {:file "/home/severin/.boot/cache/tmp/home/severin/go/src/github.com/mswift42/atc2/app/enc/-grrwi1/app/colors.cljs", :line 66, :column 7, :end-line 66, :end-column 15, :arglists (quote ([lchcolor]))}, :name app.colors/lchToLab, :variadic false, :file "/home/severin/.boot/cache/tmp/home/severin/go/src/github.com/mswift42/atc2/app/enc/-grrwi1/app/colors.cljs", :end-column 15, :method-params ([lchcolor]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 66, :end-line 66, :max-fixed-arity 1, :fn-var true, :arglists (quote ([lchcolor]))}, warm-palette {:protocol-inline nil, :meta {:file "/home/severin/.boot/cache/tmp/home/severin/go/src/github.com/mswift42/atc2/app/enc/-grrwi1/app/colors.cljs", :line 208, :column 7, :end-line 208, :end-column 19, :arglists (quote ([])), :doc "warm-palette returns a vector of 7 random warm colors."}, :name app.colors/warm-palette, :variadic false, :file "/home/severin/.boot/cache/tmp/home/severin/go/src/github.com/mswift42/atc2/app/enc/-grrwi1/app/colors.cljs", :end-column 19, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 208, :end-line 208, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :doc "warm-palette returns a vector of 7 random warm colors."}, lchToHex {:protocol-inline nil, :meta {:file "/home/severin/.boot/cache/tmp/home/severin/go/src/github.com/mswift42/atc2/app/enc/-grrwi1/app/colors.cljs", :line 109, :column 7, :end-line 109, :end-column 15, :arglists (quote ([lchcolor]))}, :name app.colors/lchToHex, :variadic false, :file "/home/severin/.boot/cache/tmp/home/severin/go/src/github.com/mswift42/atc2/app/enc/-grrwi1/app/colors.cljs", :end-column 15, :method-params ([lchcolor]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 109, :end-line 109, :max-fixed-arity 1, :fn-var true, :arglists (quote ([lchcolor]))}, red-contrast {:protocol-inline nil, :meta {:file "/home/severin/.boot/cache/tmp/home/severin/go/src/github.com/mswift42/atc2/app/enc/-grrwi1/app/colors.cljs", :line 165, :column 7, :end-line 165, :end-column 19, :arglists (quote ([]))}, :name app.colors/red-contrast, :variadic false, :file "/home/severin/.boot/cache/tmp/home/severin/go/src/github.com/mswift42/atc2/app/enc/-grrwi1/app/colors.cljs", :end-column 19, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 165, :end-line 165, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, dark-bg? {:protocol-inline nil, :meta {:file "/home/severin/.boot/cache/tmp/home/severin/go/src/github.com/mswift42/atc2/app/enc/-grrwi1/app/colors.cljs", :line 132, :column 7, :end-line 132, :end-column 15, :arglists (quote ([color])), :doc "dark-bg? returns true if the given hex color is 'dark'"}, :name app.colors/dark-bg?, :variadic false, :file "/home/severin/.boot/cache/tmp/home/severin/go/src/github.com/mswift42/atc2/app/enc/-grrwi1/app/colors.cljs", :end-column 15, :method-params ([color]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 132, :end-line 132, :max-fixed-arity 1, :fn-var true, :arglists (quote ([color])), :doc "dark-bg? returns true if the given hex color is 'dark'"}, hexToRgb {:protocol-inline nil, :meta {:file "/home/severin/.boot/cache/tmp/home/severin/go/src/github.com/mswift42/atc2/app/enc/-grrwi1/app/colors.cljs", :line 5, :column 7, :end-line 5, :end-column 15, :arglists (quote ([hexcolor])), :doc "convert hex color to rgb in values 0..1"}, :name app.colors/hexToRgb, :variadic false, :file "/home/severin/.boot/cache/tmp/home/severin/go/src/github.com/mswift42/atc2/app/enc/-grrwi1/app/colors.cljs", :end-column 15, :method-params ([hexcolor]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 5, :end-line 5, :max-fixed-arity 1, :fn-var true, :arglists (quote ([hexcolor])), :doc "convert hex color to rgb in values 0..1"}, set-random-palette {:protocol-inline nil, :meta {:file "/home/severin/.boot/cache/tmp/home/severin/go/src/github.com/mswift42/atc2/app/enc/-grrwi1/app/colors.cljs", :line 236, :column 7, :end-line 236, :end-column 25, :arglists (quote ([palette])), :doc "set :keyword :builtin :string :functionname :variable\n   :type and constant colors in app-db to colors of a\n   random color palette"}, :name app.colors/set-random-palette, :variadic false, :file "/home/severin/.boot/cache/tmp/home/severin/go/src/github.com/mswift42/atc2/app/enc/-grrwi1/app/colors.cljs", :end-column 25, :method-params ([palette]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 236, :end-line 236, :max-fixed-arity 1, :fn-var true, :arglists (quote ([palette])), :doc "set :keyword :builtin :string :functionname :variable\n   :type and constant colors in app-db to colors of a\n   random color palette"}, darken {:protocol-inline nil, :meta {:file "/home/severin/.boot/cache/tmp/home/severin/go/src/github.com/mswift42/atc2/app/enc/-grrwi1/app/colors.cljs", :line 113, :column 7, :end-line 113, :end-column 13, :arglists (quote ([colorstring] [colorstring factor])), :doc "darken darkens a rgb color by a given factor.\n   if no factor is provided, the color will be darkened \n   with the factor of 0.2.", :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([colorstring] [colorstring factor]), :arglists ([colorstring] [colorstring factor]), :arglists-meta (nil nil)}}, :name app.colors/darken, :variadic false, :file "/home/severin/.boot/cache/tmp/home/severin/go/src/github.com/mswift42/atc2/app/enc/-grrwi1/app/colors.cljs", :end-column 13, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([colorstring] [colorstring factor]), :arglists ([colorstring] [colorstring factor]), :arglists-meta (nil nil)}, :method-params ([colorstring] [colorstring factor]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 113, :end-line 113, :max-fixed-arity 2, :fn-var true, :arglists ([colorstring] [colorstring factor]), :doc "darken darkens a rgb color by a given factor.\n   if no factor is provided, the color will be darkened \n   with the factor of 0.2."}, rgbToXyz {:protocol-inline nil, :meta {:file "/home/severin/.boot/cache/tmp/home/severin/go/src/github.com/mswift42/atc2/app/enc/-grrwi1/app/colors.cljs", :line 28, :column 7, :end-line 28, :end-column 15, :arglists (quote ([rgbcolor]))}, :name app.colors/rgbToXyz, :variadic false, :file "/home/severin/.boot/cache/tmp/home/severin/go/src/github.com/mswift42/atc2/app/enc/-grrwi1/app/colors.cljs", :end-column 15, :method-params ([rgbcolor]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 28, :end-line 28, :max-fixed-arity 1, :fn-var true, :arglists (quote ([rgbcolor]))}, pop-palette {:protocol-inline nil, :meta {:file "/home/severin/.boot/cache/tmp/home/severin/go/src/github.com/mswift42/atc2/app/enc/-grrwi1/app/colors.cljs", :line 215, :column 7, :end-line 215, :end-column 18, :arglists (quote ([])), :doc "pop-palette returns a vector of 7 random 'pop' colors."}, :name app.colors/pop-palette, :variadic false, :file "/home/severin/.boot/cache/tmp/home/severin/go/src/github.com/mswift42/atc2/app/enc/-grrwi1/app/colors.cljs", :end-column 18, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 215, :end-line 215, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :doc "pop-palette returns a vector of 7 random 'pop' colors."}, muted-palette {:protocol-inline nil, :meta {:file "/home/severin/.boot/cache/tmp/home/severin/go/src/github.com/mswift42/atc2/app/enc/-grrwi1/app/colors.cljs", :line 222, :column 7, :end-line 222, :end-column 20, :arglists (quote ([])), :doc "muted-palette returns a vector of 7 random muted colors."}, :name app.colors/muted-palette, :variadic false, :file "/home/severin/.boot/cache/tmp/home/severin/go/src/github.com/mswift42/atc2/app/enc/-grrwi1/app/colors.cljs", :end-column 20, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 222, :end-line 222, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :doc "muted-palette returns a vector of 7 random muted colors."}, lighten {:protocol-inline nil, :meta {:file "/home/severin/.boot/cache/tmp/home/severin/go/src/github.com/mswift42/atc2/app/enc/-grrwi1/app/colors.cljs", :line 122, :column 7, :end-line 122, :end-column 14, :arglists (quote ([colorstring] [colorstring factor])), :doc "lighten lightens a rgb color by a given factor.\n   If no factor is provided, the color will be lightened\n   with the factor of 0.2.", :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([colorstring] [colorstring factor]), :arglists ([colorstring] [colorstring factor]), :arglists-meta (nil nil)}}, :name app.colors/lighten, :variadic false, :file "/home/severin/.boot/cache/tmp/home/severin/go/src/github.com/mswift42/atc2/app/enc/-grrwi1/app/colors.cljs", :end-column 14, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([colorstring] [colorstring factor]), :arglists ([colorstring] [colorstring factor]), :arglists-meta (nil nil)}, :method-params ([colorstring] [colorstring factor]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 122, :end-line 122, :max-fixed-arity 2, :fn-var true, :arglists ([colorstring] [colorstring factor]), :doc "lighten lightens a rgb color by a given factor.\n   If no factor is provided, the color will be lightened\n   with the factor of 0.2."}, clamped-rgb-vec {:protocol-inline nil, :meta {:file "/home/severin/.boot/cache/tmp/home/severin/go/src/github.com/mswift42/atc2/app/enc/-grrwi1/app/colors.cljs", :line 19, :column 7, :end-line 19, :end-column 22, :arglists (quote ([rgbvector]))}, :name app.colors/clamped-rgb-vec, :variadic false, :file "/home/severin/.boot/cache/tmp/home/severin/go/src/github.com/mswift42/atc2/app/enc/-grrwi1/app/colors.cljs", :end-column 22, :method-params ([rgbvector]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 19, :end-line 19, :max-fixed-arity 1, :fn-var true, :arglists (quote ([rgbvector]))}, darken-color-in-db {:protocol-inline nil, :meta {:file "/home/severin/.boot/cache/tmp/home/severin/go/src/github.com/mswift42/atc2/app/enc/-grrwi1/app/colors.cljs", :line 145, :column 7, :end-line 145, :end-column 25, :arglists (quote ([color]))}, :name app.colors/darken-color-in-db, :variadic false, :file "/home/severin/.boot/cache/tmp/home/severin/go/src/github.com/mswift42/atc2/app/enc/-grrwi1/app/colors.cljs", :end-column 25, :method-params ([color]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 145, :end-line 145, :max-fixed-arity 1, :fn-var true, :arglists (quote ([color]))}, lighten-color-in-db {:protocol-inline nil, :meta {:file "/home/severin/.boot/cache/tmp/home/severin/go/src/github.com/mswift42/atc2/app/enc/-grrwi1/app/colors.cljs", :line 142, :column 7, :end-line 142, :end-column 26, :arglists (quote ([color]))}, :name app.colors/lighten-color-in-db, :variadic false, :file "/home/severin/.boot/cache/tmp/home/severin/go/src/github.com/mswift42/atc2/app/enc/-grrwi1/app/colors.cljs", :end-column 26, :method-params ([color]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 142, :end-line 142, :max-fixed-arity 1, :fn-var true, :arglists (quote ([color]))}, rgbToHex {:protocol-inline nil, :meta {:file "/home/severin/.boot/cache/tmp/home/severin/go/src/github.com/mswift42/atc2/app/enc/-grrwi1/app/colors.cljs", :line 23, :column 7, :end-line 23, :end-column 15, :arglists (quote ([rgbcolor]))}, :name app.colors/rgbToHex, :variadic false, :file "/home/severin/.boot/cache/tmp/home/severin/go/src/github.com/mswift42/atc2/app/enc/-grrwi1/app/colors.cljs", :end-column 15, :method-params ([rgbcolor]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 23, :end-line 23, :max-fixed-arity 1, :fn-var true, :arglists (quote ([rgbcolor]))}, custom-palette {:protocol-inline nil, :meta {:file "/home/severin/.boot/cache/tmp/home/severin/go/src/github.com/mswift42/atc2/app/enc/-grrwi1/app/colors.cljs", :line 229, :column 7, :end-line 229, :end-column 21, :arglists (quote ([lightness saturation])), :doc "custom-palette returns a vector of 7 random colors,\n   with the values for lightness and saturation set to\n   its given values."}, :name app.colors/custom-palette, :variadic false, :file "/home/severin/.boot/cache/tmp/home/severin/go/src/github.com/mswift42/atc2/app/enc/-grrwi1/app/colors.cljs", :end-column 21, :method-params ([lightness saturation]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 229, :end-line 229, :max-fixed-arity 2, :fn-var true, :arglists (quote ([lightness saturation])), :doc "custom-palette returns a vector of 7 random colors,\n   with the values for lightness and saturation set to\n   its given values."}, hue-range {:protocol-inline nil, :meta {:file "/home/severin/.boot/cache/tmp/home/severin/go/src/github.com/mswift42/atc2/app/enc/-grrwi1/app/colors.cljs", :line 187, :column 7, :end-line 187, :end-column 16, :arglists (quote ([length startvalue])), :doc "hue-range returns a vecor of equidistant huevalues."}, :name app.colors/hue-range, :variadic false, :file "/home/severin/.boot/cache/tmp/home/severin/go/src/github.com/mswift42/atc2/app/enc/-grrwi1/app/colors.cljs", :end-column 16, :method-params ([length startvalue]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 187, :end-line 187, :max-fixed-arity 2, :fn-var true, :arglists (quote ([length startvalue])), :doc "hue-range returns a vecor of equidistant huevalues."}, xyzToRgb {:protocol-inline nil, :meta {:file "/home/severin/.boot/cache/tmp/home/severin/go/src/github.com/mswift42/atc2/app/enc/-grrwi1/app/colors.cljs", :line 89, :column 7, :end-line 89, :end-column 15, :arglists (quote ([xyzcolor]))}, :name app.colors/xyzToRgb, :variadic false, :file "/home/severin/.boot/cache/tmp/home/severin/go/src/github.com/mswift42/atc2/app/enc/-grrwi1/app/colors.cljs", :end-column 15, :method-params ([xyzcolor]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 89, :end-line 89, :max-fixed-arity 1, :fn-var true, :arglists (quote ([xyzcolor]))}, valid-rgb? {:protocol-inline nil, :meta {:file "/home/severin/.boot/cache/tmp/home/severin/go/src/github.com/mswift42/atc2/app/enc/-grrwi1/app/colors.cljs", :line 10, :column 7, :end-line 10, :end-column 17, :arglists (quote ([rgbcolor]))}, :name app.colors/valid-rgb?, :variadic false, :file "/home/severin/.boot/cache/tmp/home/severin/go/src/github.com/mswift42/atc2/app/enc/-grrwi1/app/colors.cljs", :end-column 17, :method-params ([rgbcolor]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 10, :end-line 10, :max-fixed-arity 1, :fn-var true, :arglists (quote ([rgbcolor]))}, labToXyz {:protocol-inline nil, :meta {:file "/home/severin/.boot/cache/tmp/home/severin/go/src/github.com/mswift42/atc2/app/enc/-grrwi1/app/colors.cljs", :line 74, :column 7, :end-line 74, :end-column 15, :arglists (quote ([labcolor]))}, :name app.colors/labToXyz, :variadic false, :file "/home/severin/.boot/cache/tmp/home/severin/go/src/github.com/mswift42/atc2/app/enc/-grrwi1/app/colors.cljs", :end-column 15, :method-params ([labcolor]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 74, :end-line 74, :max-fixed-arity 1, :fn-var true, :arglists (quote ([labcolor]))}, labToLch {:protocol-inline nil, :meta {:file "/home/severin/.boot/cache/tmp/home/severin/go/src/github.com/mswift42/atc2/app/enc/-grrwi1/app/colors.cljs", :line 58, :column 7, :end-line 58, :end-column 15, :arglists (quote ([labcolor]))}, :name app.colors/labToLch, :variadic false, :file "/home/severin/.boot/cache/tmp/home/severin/go/src/github.com/mswift42/atc2/app/enc/-grrwi1/app/colors.cljs", :end-column 15, :method-params ([labcolor]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 58, :end-line 58, :max-fixed-arity 1, :fn-var true, :arglists (quote ([labcolor]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:bg3 :vsui :bg2 :fg4 :mainfg :mainbg :bg4 :fg3 :fg2}, :order [:mainbg :fg2 :mainfg :fg3 :fg4 :bg2 :bg3 :bg4 :vsui]}, :doc nil}